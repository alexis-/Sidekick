<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Sidekick.WPF.Controls"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">

  <DataTemplate x:Key="FlatIconizableButtonOpacityMaskIconTemplate">
    <Rectangle Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
               Width="{Binding IconSize.Width, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:FlatIconizableButton}}}"
               Height="{Binding IconSize.Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:FlatIconizableButton}}}"
               Focusable="False">
      <Rectangle.OpacityMask>
        <VisualBrush Stretch="Uniform"
                     Visual="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
      </Rectangle.OpacityMask>
    </Rectangle>
  </DataTemplate>
  
  <Style x:Key="FlatIconizableButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Grid"
                Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="PART_ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style TargetType="{x:Type local:FlatIconizableButton}">
    <Setter Property="ButtonStyle" Value="{DynamicResource FlatIconizableButtonStyle}" />
    <Setter Property="IconTemplate" Value="{DynamicResource FlatIconizableButtonOpacityMaskIconTemplate}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="PressedBrush" Value="{DynamicResource GrayBrush7}" />
    <Setter Property="MouseOverBrush" Value="{DynamicResource GrayBrush9}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <!--<Setter Property="MinHeight" Value="26" />-->
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:FlatIconizableButton}">
          <Border x:Name="PART_Border"
                  Background="{TemplateBinding Background}"
                  BorderThickness="0"
                  RenderTransformOrigin="0.5 0.5"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  UseLayoutRounding="True">
            <Button x:Name="PART_Button"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Padding="{TemplateBinding Padding}"
                    Style="{TemplateBinding ButtonStyle}"
                    Background="Transparent"
                    Foreground="{TemplateBinding Foreground}"
                    Command="{TemplateBinding Command}"
                    CommandParameter="{TemplateBinding CommandParameter}"
                    CommandTarget="{TemplateBinding CommandTarget}"
                    FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <StackPanel x:Name="PART_Content"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          Focusable="False"
                          Orientation="Horizontal">
                <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentTemplate="{TemplateBinding IconTemplate}"
                                  Focusable="False"
                                  RecognizesAccessKey="True"
                                  UseLayoutRounding="False" />
                <controls:ContentControlEx x:Name="PART_ButtonContent"
                                           Margin="3"
                                           Padding="{TemplateBinding ButtonPadding}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                           ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                           RecognizesAccessKey="True"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           UseLayoutRounding="False" />
              </StackPanel>
            </Button>
            <Border.RenderTransform>
              <ScaleTransform />
            </Border.RenderTransform>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" SourceName="PART_Button" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard TargetName="PART_Border">
                    <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.95"/>
                    <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.95"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="PART_Border"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.00"/>
                    <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="PART_Border"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.00"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
              <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=PressedBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="PART_Button" Value="True">
              <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=MouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" SourceName="PART_Button" Value="False">
              <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="PART_ButtonContent" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
              <Setter TargetName="PART_Content" Property="Orientation" Value="Vertical" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value=".55" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>